<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jade on mono-log</title>
    <link>http://mono0926.com/tags/jade/</link>
    <description>Recent content in Jade on mono-log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 26 May 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://mono0926.com/tags/jade/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>NodeJS &#43; Express &#43; Stylus &#43; Jade &#43; AngularJS &#43; Redisなどなどで、簡単なTODOアプリ</title>
      <link>http://mono0926.com/programming/todo/</link>
      <pubDate>Mon, 26 May 2014 00:00:00 +0000</pubDate>
      
      <guid>http://mono0926.com/programming/todo/</guid>
      <description>&lt;p&gt;NodeJS + Express + Stylus + Jade + AngularJS + Redisなどなどで、&lt;a href=&#34;http://ice-me.herokuapp.com/todos&#34;&gt;簡単なTODOアプリ&lt;/a&gt;作った。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/gp/product/484433588X/ref=as_li_ss_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=7399&amp;amp;creativeASIN=484433588X&amp;amp;linkCode=as2&amp;amp;tag=mono0926-22&#34;&gt;TypeScriptリファレンス Ver.1.0対応&lt;/a&gt;のサンプルを参考に、アレンジした感じ(オリジナルはSQLiteなど使用)。&lt;/p&gt;

&lt;p&gt;Redisでのデータの持ち方は&lt;a href=&#34;http://redis.shibu.jp/tutorial/&#34;&gt;ケーススタディ — redis 2.0.3 documentation&lt;/a&gt;である程度分かったけど、なかなか迷うところや困るところも多いので、Redis入門読んでじっくり勉強中。
&lt;a href=&#34;http://ice-me.herokuapp.com/todos&#34;&gt;TODOアプリ&lt;/a&gt;では、なんとか動作自体は出来たけど、ちょっとしっくり来ないところもあったり。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.jp/gp/product/B00HSC64P8/ref=as_li_ss_il?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B00HSC64P8&amp;linkCode=as2&amp;tag=mono0926-22&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;ASIN=B00HSC64P8&amp;Format=_SL160_&amp;ID=AsinImage&amp;MarketPlace=JP&amp;ServiceVersion=20070822&amp;WS=1&amp;tag=mono0926-22&#34; &gt;&lt;/a&gt;&lt;img src=&#34;http://ir-jp.amazon-adsystem.com/e/ir?t=mono0926-22&amp;l=as2&amp;o=9&amp;a=B00HSC64P8&#34; width=&#34;1&#34; height=&#34;1&#34; border=&#34;0&#34; alt=&#34;&#34; style=&#34;border:none !important; margin:0px !important;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;「Redis入門」というタイトルだけど、原書は&lt;a href=&#34;http://www.amazon.com/gp/product/1617290858/ref=as_li_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=390957&amp;amp;creativeASIN=1617290858&amp;amp;linkCode=as2&amp;amp;tag=mono0926-20&amp;amp;linkId=TTS6QNHCUFJDJESI&#34;&gt;Redis in Action&lt;/a&gt;なだけあって、けっこう歯ごたえのある内容。一通り理解して手を動かせば、RedisやKVSのパラダイムに慣れられそう。&lt;/p&gt;

&lt;p&gt;サーバーサイドは外部モジュール使ってるけど(&lt;code&gt;import xxx = require(&#39;yyy&#39;)&lt;/code&gt;形式)、クライアント側は内部モジュール形式で書いて手動で下記を実行して連結しているのも微妙なので、改善したい（´-ω-｀）他はWebStormで普通に実行したり、herokuへのデプロイはGitのPUSHで出来て楽なのだけれど（´-ω-｀）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tsc @compile.tscparams
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;AngularJSとJadeのおかげで、HTML部分がすごくクリーンになっているのはとても良い感じ(　´･‿･｀)&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/mono0926/3ee7f4c5016e88a6c6a3.js&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>TypeScript・AngularJS・Jade・Stylusでサンプルコード</title>
      <link>http://mono0926.com/programming/angularjs/</link>
      <pubDate>Wed, 14 May 2014 00:00:00 +0000</pubDate>
      
      <guid>http://mono0926.com/programming/angularjs/</guid>
      <description>

&lt;p&gt;最近Web系の勉強してて、Node.js・Express・Redis・Herokuなどサーバーサイド周り弄ってたけど、そろそろフロントエンドもという感じで色々やってみた。&lt;/p&gt;

&lt;h3 id=&#34;サンプル置いとく-http-ice-me-herokuapp-com-angular:cd1b7a9a52bc143e9e26faa4af35e3f6&#34;&gt;&lt;a href=&#34;http://ice-me.herokuapp.com/angular#/&#34;&gt;サンプル置いとく&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;AngularJSはけっこうリッチなライブラリで、全部身につけるのはしばらくかかりそうだけど、今日主要な機能はざっくり書けるようになった感(　´･‿･｀)
&lt;a href=&#34;http://vuejs.org/&#34;&gt;Vue.js&lt;/a&gt;と迷ったけど、&lt;a href=&#34;https://github.com/borisyankov/DefinitelyTyped&#34;&gt;borisyankov/DefinitelyTyped&lt;/a&gt;にまだ無かったし、とりあえず今メジャーなAngularJSやっとこうか、という感じ。&lt;/p&gt;

&lt;p&gt;JadeとStylusは記法いくつか覚えらればわりとサクサク書けて、気に入った。これ系いくつかあるけど、どれがいいんですかね。あまり比較検討せずに決めてしまった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AngularJS: MVW(Model-View-Whatever)フレームワークというらしい。Whatever=厳密に定義しない、みたいな意味らしい。JS・HTML周りのスパゲッティコード解消。MV*とかはともかく、とりあえずバインディング機構あるのが嬉しい。&lt;/li&gt;
&lt;li&gt;Jade: HTMLの簡易記法 + αの機能&lt;/li&gt;
&lt;li&gt;Stylus: SASS・LESSの後発版みたいな感じ？&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- more --&gt;

&lt;h2 id=&#34;資料:cd1b7a9a52bc143e9e26faa4af35e3f6&#34;&gt;資料&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/opengl-8080/items/2fe0a20c314b1c824cc5&#34;&gt;AngularJS使い方メモ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/icoxfog417/items/2ac773c33a8b34288551&#34;&gt;AngularJS - お前のAngular.jsはもうMVCではない。と言われないためのTutorial - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/zoetro/items/a45dbc18bb2b22e944b2&#34;&gt;AngularJSのMVWパターンを理解する - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.angularjs.org/guide/concepts&#34;&gt;AngularJS: Developer Guide: Conceptual Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/sasaplus1/items/189560f80cf337d40fdf&#34;&gt;Node.js - Jadeの記法について（あまりまとまっていない） - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://naltatis.github.io/jade-syntax-docs/&#34;&gt;Jade Template Syntax Documentation by Example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;一気に色々やると破綻しそうかと心配だったけど、意外とスムーズに出来たのは良かった。&lt;/p&gt;

&lt;p&gt;AngularJS、&lt;a href=&#34;http://qiita.com/opengl-8080/items/2fe0a20c314b1c824cc5&#34;&gt;AngularJS使い方メモ - Qiita&lt;/a&gt;の「ページの一部に動的にテンプレートを読み込む」くらいまでで、まだシングルページアプリケーション周りの機能は終えてないから、また続きやろう（´-ω-｀）&lt;/p&gt;

&lt;h2 id=&#34;コード:cd1b7a9a52bc143e9e26faa4af35e3f6&#34;&gt;コード&lt;/h2&gt;

&lt;script src=&#34;https://gist.github.com/mono0926/30e00a6a26498eff5973.js&#34;&gt;&lt;/script&gt;

&lt;script src=&#34;https://gist.github.com/mono0926/2e8b58d3003f1fcbfa1c.js&#34;&gt;&lt;/script&gt;

&lt;script src=&#34;https://gist.github.com/mono0926/780a92e2fe8c7c80e80f.js&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
  </channel>
</rss>