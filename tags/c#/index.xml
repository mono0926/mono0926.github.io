<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C# on mono0926.com</title>
    <link>https://mono0926.com/tags/c#/</link>
    <description>Recent content in C# on mono0926.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 23 Nov 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://mono0926.com/tags/c#/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Haskell勉強中</title>
      <link>https://mono0926.com/programming/haskell/</link>
      <pubDate>Sat, 23 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://mono0926.com/programming/haskell/</guid>
      <description>2週間くらい前からHaskell勉強中。
各種言語使ってきて、今の本業(Objective-C)や一番得意な言語(C#)以外にも久々に手を出したいなと思って以下を検討。
 LL系(Pythonなど)をもう少し自由に使えるように  ベターな書き方やモジュール知らずに冗長な記述になっていそう 日頃の自動化が捗りそう  ネイティブ系  C言語が最低限しか書けない上に段々忘れていったりもしている ネイティブ系(コンパイル型・非VM)で書かなきゃいけない時とか手駒がない とはいいつつCもC++も積極的に書きたくないのでやるとしたら下記のいずれか Go D言語  関数型  C#でLINQとかラムダ式とか慣れたけど、関数型の書き方を一部取り入れたオブジェクト指向という感じで、純粋関数型言語を学びたい pandocというドキュメント変換ツールのソース理解とか改変とかしたいと思いつつHaskellで書かれていて全然分からない   まあどれでも良いかなあと思いつつ、Scalaとかも勉強したいとか思っていたのもあり関数型かなあと、とりあえずKindleで安く手に入るGuide to ScalaーScalaプログラミング入門をざっと読んだ。 結果、C#と大して変わらず(Scalaの方がより関数型っぽいけど)、ちゃんと勉強するなら純粋関数型言語だなあと思い、pandocの理解にも繋がるしHaskellを勉強することに。
コンパイル型といえども、記述もシンプルでコンパイル簡単なので、今Pythonとかで簡単な自動化スクリプト書いている代替にもなるかなと。
勉強計画 すごいHaskellたのしく学ぼう! 少し前に話題になっていたこの本をまず読むことに。 洋書にするか迷ったけど、せっかく和書のKindle版もあるのでそれに頼った。
そして、オンライン版はフリーで読めることもさっき知ったり：Learn You a Haskell for Great Good!
フリーということは…と思って探したら、Kindle用のファイルを生成出来るプロジェクトもあったり。 ただ、本に出てくるソースコード集が見つからず、まあいいか。
本の前半は、Haskellの構文に慣れるのに少し苦労しつつ、後半のアプリカティブのあたりでけっこう理解が怪しくなってきた（´-ω-｀） 理論が理解出来ていなくてしっくりこないところが一部あるものの、コードの挙動などは何とか読み解けているのでまだなんとかいけるはず。
その後 Parallel and Concurrent Programming in Haskellが面白そうなので、次に読みたいところ。並列/並行処理周りがまだ弱い気がするのでその勉強もかねて。
あと、個人的に同じ本を繰り返し読むのが苦手(それが大事なのは理解している)なので、代わりに本物のプログラマはHaskellを使うとか読んで曖昧なところの理解を深めて行ければ。
実行環境 GHCインストール 色々処理系があるようだけど、標準のGHCを導入。 よく分からないけど、Homebrewで良いかと、以下を実行してインストール。 Mavericksなどの場合は環境によっては前もってCommand Line Toolsのインストールをしないとビルド失敗したりするはず。
brew update brew install haskell brew install haskell-platform # これがなんだか理解していない  これで、ターミナルでghciと打つと、Haskellのインタプリターが起動するはず。 今まで、わざわざファイルで書く必要の無い書き捨ての込み入った計算はPythonのインタプリターでやっていた(そこまでする必要の無い程度ならAlfredの電卓で)けど、これからはghciでやろうかなと。</description>
    </item>
    
  </channel>
</rss>