<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on mono0926.com</title>
    <link>https://mono0926.com/tags/golang/</link>
    <description>Recent content in golang on mono0926.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 20 Oct 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://mono0926.com/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>クックパッド第5回 開発コンテスト24に参戦した話</title>
      <link>https://mono0926.com/programming/cookpad/</link>
      <pubDate>Mon, 20 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://mono0926.com/programming/cookpad/</guid>
      <description>先日もISUCONコンテスト予選に出たばかりですが、土日(10月18-19日)に クックパッドの「第5回 開発コンテスト24」に参戦しました。
勝手にアニバーサリー ～なんでもない日を、あの人との記念日に。～が成果物です。 ちなみに、タイトルは僕が初め適当に提案したのが意外と良かったらしくそのまま採用されました（｀・ω・´）
メンバー こんな感じのバランスの良いメンバーが集まりました(　´･‿･｀)
 僕  iOSアプリか適当なGoコード書く予定 (結果Goコード書いてた)  やぶさん  サーバーサイド(普段Scala使ってるけど、今回はGo)  の奥さん  Data Veraciを作った方 (前職の先輩)  ひつじさん  yah○○のデザイナーさん  のんたん☆  恵比寿のデザイナーさん   僕が平均年齢くらいの華やかなメンバーでした。
当日まで  レポジトリ作成: SYM-CONTEST/Cookpad2014 Facebookイベント作成: クックパッド 第5回 開発コンテスト24 Slack用意  自宅警備もする必要があるので、オンライン上でやりとりして開発  yah○○のBASE6で打ち合わせ(ひつじさんからのご招待)  ここでのんたん☆の参戦決定（｀・ω・´）   当日 去年も余命チェッカーで参戦してたので、大体勝手は分かっていました。
朝9時 クックパッドの「第5回 開発コンテスト24」をリロードして、お題が「誰かと話すキッカケを作るサービス」であることを把握。
元々、10時までに作るネタが決まらなかったら解散というオレオレレギュレーションをやっていたので、時間を気にしつつネタ出し。
けっこう良いアイディアが出るものの、コンテスト受けしそうか微妙な感じで、なかなか収束せず。
雰囲気的に10時過ぎてもそのまま続行することにして、最低午前中にという感じで結果、過去に何かつながりがあってご無沙汰な人間関係を、勝手に記念日をでっちあげて祝うことで結びつけるサービスになりました。
具体的には、Twitterで過去に絡んだ人たちに、そのやり取りのキーワードを抽出して○○記念日のメッセージを投げるみたいな。 (Twitterに限らずもっと膨らませたかったけど、実装コストの兼ね合いもあり)
1日目昼 作るものが決まったので、もう少し仕様や画面を詰めるような相談をしたり、出来るところは実装始めたり。
やぶさん達はいつの間にかお寿司屋さん行ってました（´・д・｀） 僕は不慣れなGo言語での以下の2点の実装法を手短に調べて、うんいけそうみたいな感触を得ました。
 Twitter認証  mrjones/oauth採用  Twitter APIで過去のやり取りを取得  ChimeraCoder/anaconda採用   そんなこんなで、Googleハングアウト使いながら、みんなで色々お話しつつ作業。</description>
    </item>
    
    <item>
      <title>golangの環境構築</title>
      <link>https://mono0926.com/programming/golang/</link>
      <pubDate>Tue, 13 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://mono0926.com/programming/golang/</guid>
      <description>GoCon/2014spring.rst at master · GoCon/GoConに備えて、とりあえずgolangのセットアップと、暇なときにA Tour of Goをやっておこうかと(　´･‿･｀)
gvmセットアップ moovweb/gvmに書いてある通りにやった。 mercurialのインストールが必要だったので、Brewfileに追記しておいた。
あと、gvm install go1に失敗したので、Issues on OSX · Issue #38 · moovweb/gvmに書いてある対応で何とかなった。
普通にbrew install goのが楽だけど、ちょっとがんばった（´-ω-｀）
実行 以下を実行。
package main import &amp;quot;fmt&amp;quot; func main() { fmt.Printf(&amp;quot;Hello world!&amp;quot;) }  OSXの開発環境を整えた - monoHubでJetBrainのIDEいくつかインストールしてたけど、IntelliJ IDEA — The Best Java and Polyglot IDEで全部包含してるのね、情弱つらたん（´-ω-｀）
まあそこそこのお値段だし、適当に色々試用して、良かったら最終的にUltimate Edtion買おうかな（´-ω-｀） Web StormでもGoのプラグインインストール出来たけど、SDKの設定とかうまく出来なかったりぐぐったりして出た説明と違うからCommunity Edition版のIntelliJでやった。
実行できたけど、go build hoge.goで生成されるような実行ファイルが生成出来なくて謎(　´･‿･｀)
GOROOT・GOPATHもどこで設定すべきかとかその役割とかよく分からなくてつらたん（´-ω-｀）
解決  go-lang-idea-plugin/Missing ENV.md at master · go-lang-plugin-org/go-lang-idea-pluginを参考に設定したら、警告ダイアログが出なくなった。 Run Configurationsで、Build before runにチェックを付けてディレクトリをbinに設定したら、実行ファイルも生成されるようになった。  ただ、多分IntelliJがGoのデバッグ実行に対応していない？(無反応)のがつらたん（´-ω-｀） Support for debugging · Issue #25 · go-lang-plugin-org/go-lang-idea-pluginを見ると、GAEプロジェクトのみ対応？？よく分からない（´-ω-｀）</description>
    </item>
    
  </channel>
</rss>