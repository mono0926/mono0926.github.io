<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[monoHub]]></title>
  <link href="http://mono0926.github.io/atom.xml" rel="self"/>
  <link href="http://mono0926.github.io/"/>
  <updated>2013-07-14T16:05:14+09:00</updated>
  <id>http://mono0926.github.io/</id>
  <author>
    <name><![CDATA[Masayuki Ono]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[電子書籍自費出版系情報まとめ]]></title>
    <link href="http://mono0926.github.io/blog/2013/07/14/self-publish/"/>
    <updated>2013-07-14T09:17:00+09:00</updated>
    <id>http://mono0926.github.io/blog/2013/07/14/self-publish</id>
    <content type="html"><![CDATA[<p>最近、電子書籍系のアプリ開発中で、色々調べています。
ちょっと情報が頭に乗り切らなくなってきたので、整理。</p>

<hr />

<h3>ツール</h3>

<h4><a href="http://www.amazon.com/gp/feature.html?ie=UTF8&amp;docId=1000765211">Kindlegen</a></h4>

<p>Amazon謹製の、HTMLやEPUB形式からMobi形式に変換するツール。
成果物は、MacなどのKindleアプリでも見られるし、<a href="http://www.amazon.com/gp/feature.html/ref=amb_link_359603222_5?ie=UTF8&amp;docId=1000765261&amp;pf_rd_m=ATVPDKIKX0DER&amp;pf_rd_s=center-8&amp;pf_rd_r=05Y1JB4SCG6HF48FKJFX&amp;pf_rd_t=1401&amp;pf_rd_p=1342416142&amp;pf_rd_i=1000765211">Kindle Previewer</a>で、各プラットフォームでの動作チェック可能。</p>

<p>クラス構造を一旦HTMLに落とし込んで、Mobi形式にエクスポートするところまでは出来たけど、いくつか警告が出てたりしてまだ対処出来ていない状態。
あと、ライセンス的にアプリのサーバー側で使ったりOKなのか気になる。</p>

<ul>
<li>リファレンスなど

<ul>
<li><a href="http://kindlegen.s3.amazonaws.com/AmazonKindlePublishingGuidelines.pdf">Amazon Kindle Publishing Guidelines</a>

<ul>
<li>和訳：<a href="http://kindlegen.s3.amazonaws.com/AmazonKindlePublishingGuidelines_JP.pdf">Amazon Kindle パブリッシング・ガイドライン</a></li>
</ul>
</li>
</ul>
</li>
</ul>


<h4><a href="http://johnmacfarlane.net/pandoc/">Pandoc</a></h4>

<p>ドキュメント形式変換ツール。Markdown, HTMLなどからEPUB, PFDなどなどなど色々変換可能。
Linux, Mac, Windowsなどに対応。</p>

<!-- more -->


<ul>
<li>リファレンスなど

<ul>
<li><a href="https://github.com/jgm/pandoc">ソース(GitHub)</a></li>
<li><a href="http://johnmacfarlane.net/pandoc/README.html">Pandoc User’s Guide</a>

<ul>
<li>使い方がたくさん書いてある。</li>
</ul>
</li>
</ul>
</li>
</ul>


<p>例えばMarkdown形式からEPUB形式にしたいときの、タイトルや筆者などのメタ情報とかこう書いたりするらしい。まだ色々調べ中。
これを使って、クラス構造をEPUB形式でエクスポートできるところまでは出来たけど、細かい詰めがまだまだ（´-ω-｀）縦書きとか出来るのだろうか…。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% title
</span><span class='line'>% author(s) (separated by semicolons)
</span><span class='line'>% date</span></code></pre></td></tr></table></div></figure>


<ul>
<li>参考

<ul>
<li><a href="http://qiita.com/sky_y/items/80bcd0f353ef5b8980ee">多様なフォーマットに対応！ドキュメント変換ツールPandocを知ろう</a>

<ul>
<li>素晴らしい説明</li>
</ul>
</li>
<li><a href="http://d.hatena.ne.jp/tweeeety/20130607/1370591989">githubとかにあるMarkdown形式のﾌｧｲﾙをhtmlとかEPUBとかに変換する</a></li>
</ul>
</li>
</ul>


<hr />

<h3>本</h3>

<h4>Amazon和書</h4>

<ul>
<li><a href="http://www.amazon.co.jp/gp/product/B009XKLTGW/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B009XKLTGW&amp;linkCode=as2&amp;tag=mono0926-22">Kindle自費出版ガイド 米アマゾンの先例から学ぶ電子書籍の作り方</a>

<ul>
<li>Google Documentを使った作成法指南</li>
<li>Webで最新版を無料公開中：<a href="http://kdpguide.hatenablog.com/entry/2013/03/25/234230">「Kindle 自費出版ガイド 米アマゾンの先例から学ぶ 電子書籍の作り方」(前半)</a></li>
</ul>
</li>
<li><a href="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=mono0926-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=B00AGZ1X3C">アマゾンで売る！　一番簡単な電子書籍の作り方</a>

<ul>
<li>Google Documentは参考程度に、aozoraEpub3やSigilを利用</li>
</ul>
</li>
<li><a href="http://www.amazon.co.jp/gp/product/B00DNRE77O/ref=wms_ohs_product?ie=UTF8&amp;psc=1">一万冊売ってわかった！電子書籍を売る方法</a>

<ul>
<li>世界一周紀行など書いている人の本。ライブドアブログのEPUBエクスポートを利用。</li>
</ul>
</li>
</ul>


<p>うーん、作り方がバラバラ。わりとGoogle Documentで作るのが多数派な印象だけど。
みんなGUIベースだから直接は利用できないけど、参考程度に読んでる。</p>

<h4>Amazon洋書</h4>

<ul>
<li><a href="http://www.amazon.com/Building-Your-Book-Kindle-ebook/dp/B007URVZJ6/ref=sr_1_1?s=digital-text&amp;ie=UTF8&amp;qid=1373770883&amp;sr=1-1&amp;keywords=kindlegen">Building Your Book for Kindle</a>

<ul>
<li>無料の公式本。Word系のアプリで作ってHTML出力して、アップロードするところまでで、かなりボリューム少ないけど、一読しておいた方が良い内容。</li>
</ul>
</li>
<li><a href="http://rcm-na.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=mono0926-20&amp;o=1&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=B009G2JMRK">The eBook Design and Development Guide</a>

<ul>
<li>まだほとんど読んでないけど、Kindlegen周りの使い方中心に詳しく書いてありそう。

<ul>
<li>Webで公開中：<a href="http://bbebooksthailand.com/bb-epub-kindlegen-tutorial.html">The eBook Design and Development Guide</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="http://rcm-na.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=mono0926-20&amp;o=1&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=B006SBRA1M">Kindle Formatting Formula: Convert Your Book into a Kindle eBook Format in Less than an Hour</a>

<ul>
<li>中身見てない。</li>
</ul>
</li>
<li><a href="http://rcm-na.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=mono0926-20&amp;o=1&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=B004MDLKKK">How to Publish and Sell Your Article on the Kindle: 12 Tips for Short Documents</a>

<ul>
<li>中身見てない。</li>
</ul>
</li>
</ul>


<hr />

<h3>JSON周りの開発用ライブラリ(iOS, .NET)</h3>

<p>iPhoneアプリで編集してサーバー(ASP.NET)で変換して返すみたいなことをしているけど、その場合やっぱりJSONでのやり取りかなということで、以下が手軽に出来るようにしたかった。</p>

<ul>
<li>Objective-CのクラスからJSONへ変換</li>
<li>JSONからC#のクラスへマッピング</li>
</ul>


<h4>Objective-CのクラスからJSONへ変換</h4>

<p><a href="https://github.com/github/Mantle">Mantle</a>というライブラリでさくっとできた。もちろんCocoaPods対応なので導入も楽。</p>

<ul>
<li>JSON化したいクラスで<code>MTLModel&lt;MTLJSONSerializing&gt;</code>を継承</li>
<li>オブジェクトのプロパティ名とJSONのプロパティ名のマッピング</li>
<li>配列構造のプロパティに対しては、その定義</li>
<li>上記の設定をしとけば定型的な数行でJSON化</li>
</ul>


<script src="https://gist.github.com/mono0926/5992878.js"></script>




<script src="https://gist.github.com/mono0926/5992916.js"></script>


<h4>JSONからC#のクラスへマッピング</h4>

<p><a href="http://neue.cc/2011/12/10_357.html">.NETの標準シリアライザ(XML/JSON)の使い分けまとめ</a> にあるとおり、<code>DataContractJsonSerializer</code>を使用。
ちなみに上記サイトは僕の作ったこのブックマークレットで目に優しくなります。</p>

<script src="https://gist.github.com/mono0926/5992885.js"></script>


<p>基本的にはクラスに<code>DataContract</code>属性、プロパティに<code>DataMember</code>を付けるだけと楽ちん（´-ω-｀）
強いていえば、大文字小文字マッピングの設定を忘れずに。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='csharp'><span class='line'><span class="na">[DataMember(Name = &quot;title&quot;)]</span>
</span><span class='line'><span class="k">public</span> <span class="kt">string</span> <span class="n">Title</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<hr />

<h3>その他リンク</h3>

<p>色々調べる中で目に入ったリンクなど。</p>

<ul>
<li><a href="http://ebook.itmedia.co.jp/ebook/articles/1107/25/news019.html">無料で使えるEPUB 3作成ソフト／サービスガイド</a>

<ul>
<li>FUSEe β</li>
<li>epubpack</li>
<li>MyBooks.jp</li>
</ul>
</li>
<li><a href="http://nakusou.zatunen.com/sigil.html">GoogleのSigilパワー</a>

<ul>
<li><a href="https://code.google.com/p/sigil/">sigil</a>というアプリを使う。</li>
<li><a href="http://sigil.tsukaikata.info/">Sigilの使い方</a></li>
</ul>
</li>
<li><a href="http://iphone.f-tools.net/E-book-Jisui/ePub-Free-Sakusei.html">ePubをフリーで作成できるソフト</a>

<ul>
<li>chanLP使った方式</li>
</ul>
</li>
</ul>


<hr />

<h3>所感</h3>

<p>色々調べごとが多くて、開発自体がなかなか進まない（´-ω-｀）</p>

<p>あと、<a href="https://www.dropbox.com/developers">Dropbox API</a> が今回良い感じに組み合わせられそうで、ちょっと検討中。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Readerが終わって…]]></title>
    <link href="http://mono0926.github.io/blog/2013/07/07/google-reader-feedly/"/>
    <updated>2013-07-07T21:27:00+09:00</updated>
    <id>http://mono0926.github.io/blog/2013/07/07/google-reader-feedly</id>
    <content type="html"><![CDATA[<p>一日に500-1000件消費するくらいのRSSリーダーヘビーユーザーでしたが、意外と困っていません。</p>

<ul>
<li>Google Reader 終わる前

<ul>
<li>iPhone: Byline + たまにReeder</li>
<li>iPad: 同上</li>
<li>Mac: Reeder</li>
<li>Web: Google Reader (Windows環境の時など、たまーに見る程度)</li>
</ul>
</li>
<li>Google Reader 終わった後

<ul>
<li>iPhone: Byline + たまにReeder</li>
<li>iPad: Byline (Reeder未対応)</li>
<li>Mac: FeedlyのWebアプリ (Reeder未対応)</li>
<li>Web: FeedlyのWebアプリ</li>
</ul>
</li>
</ul>


<p>と、あまり変わって無い上に、FeedlyのWebアプリの操作感(どこを押せば何が出来るかなど)にあまり慣れていないものの、J(次)・K(前)・V(新しいページで記事開く)のショートカットが一緒なことに気づいてからはほぼノンストレスです（´-ω-｀）</p>

<p>ただ、やっぱりMacでReederを使ってサクサク見ていた感じには劣るので、早くReeder for Macがアップデートされてほしいところです（´・ω・｀）</p>

<p>…とは別にこの機会に、SmartNewsで大衆ネタ・ゴシップ系などは拾い読みしているので、RSSリーダーは技術系ネタに絞って整理したいなとかも考えていたり。なかなか面倒ですが（´-ω-｀）</p>

<h3>追記</h3>

<p><a href="https://itunes.apple.com/jp/app/readkit/id588726889?l=en&amp;mt=12">ReadKit</a> というアプリが素晴らしく、常用し始めましたヽ(・ω・｀）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopressへの投稿やdeployをAlfredのWorkflowで]]></title>
    <link href="http://mono0926.github.io/blog/2013/07/07/octopress-alfred/"/>
    <updated>2013-07-07T17:32:00+09:00</updated>
    <id>http://mono0926.github.io/blog/2013/07/07/octopress-alfred</id>
    <content type="html"><![CDATA[<p>今日初めてOctopressを触ったら、けっこう気に入ったので、さらに気軽に書ける環境を整えれば捗るのではと思い、AlfredのWorkflowを作ってみました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># deploy用</span>
</span><span class='line'><span class="nv">OCTOPATH</span><span class="o">=</span><span class="s1">&#39;/Documents/Git/Private/octopress&#39;</span>
</span><span class='line'><span class="nb">cd</span> ~/<span class="nv">$OCTOPATH</span>
</span><span class='line'>rake gen_deploy
</span><span class='line'>git add .
</span><span class='line'>git commit -m <span class="s2">&quot;deployed via workflow.&quot;</span>
</span><span class='line'>git push
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># 投稿用</span>
</span><span class='line'><span class="nv">OCTOPATH</span><span class="o">=</span><span class="s1">&#39;/Documents/Git/Private/octopress&#39;</span>
</span><span class='line'><span class="nb">cd</span> ~/<span class="nv">$OCTOPATH</span>
</span><span class='line'><span class="nv">OCTOPOST</span><span class="o">=</span><span class="k">$(</span>rake new_post<span class="o">[</span><span class="nv">$1</span><span class="o">]</span>| grep -o <span class="s1">&#39;source/_posts/.*&#39;</span><span class="k">)</span>
</span><span class='line'>open ~/<span class="nv">$OCTOPATH</span>/<span class="nv">$OCTOPOST</span>
</span></code></pre></td></tr></table></div></figure>


<p>すんなり出来るかと思いきや、これだけでは動かず、</p>

<blockquote><p>In my bash script I had to add some extras because Alfred runs the bash script in a subshell and in this subshell the rvm environment is not available by default.
<a href="http://tooh.github.io/blog/2013/04/23/Alfred_workflow_for_Octopress/">Alfred Workflow for Octopress</a></p></blockquote>

<p>とある通り、下記のような設定をする必要があったようです。
かなりハマりました（´-ω-｀）
よく分からないけど、別ファイルにしたら動かないので、とりあえず全て冒頭にこれを挟みました（´-ω-｀）</p>

<!-- more -->




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># rv設定</span>
</span><span class='line'><span class="k">if</span> <span class="o">[[</span> -s <span class="s2">&quot;$HOME/.rvm/scripts/rvm&quot;</span> <span class="o">]]</span> ; <span class="k">then</span>
</span><span class='line'><span class="k">  </span><span class="nb">source</span> <span class="s2">&quot;$HOME/.rvm/scripts/rvm&quot;</span>
</span><span class='line'><span class="k">fi</span>
</span></code></pre></td></tr></table></div></figure>


<p>さらに一応previewコマンドも作成</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="k">if</span> <span class="o">[[</span> -s <span class="s2">&quot;$HOME/.rvm/scripts/rvm&quot;</span> <span class="o">]]</span> ; <span class="k">then</span>
</span><span class='line'><span class="k">  </span><span class="nb">source</span> <span class="s2">&quot;$HOME/.rvm/scripts/rvm&quot;</span>
</span><span class='line'><span class="k">fi</span>
</span><span class='line'><span class="nv">OCTOPATH</span><span class="o">=</span><span class="s1">&#39;/Documents/Git/Private/octopress&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">cd</span> ~/<span class="nv">$OCTOPATH</span>
</span><span class='line'>rake generate
</span><span class='line'><span class="c"># open in a browser</span>
</span><span class='line'>open http://localhost:4000/
</span><span class='line'>rake preview
</span></code></pre></td></tr></table></div></figure>


<p>こちらはコマンドを実行するだけではウインドウが開かれずプロセスがゾンビ状態になってしまうので、Alfredで呼び出す時に</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>open -a Terminal.app preview.sh
</span></code></pre></td></tr></table></div></figure>


<p>と少しだけ工夫。</p>

<p><a href="https://github.com/Temikus/alfred-octopress/blob/master/post.sh">Temikus/alfred-octopress</a> など、同じようなもの作っている人もいたり。</p>

<p>とりあえず、これでいつでもランチャー起動して<code>post titleなど</code>と入力すると、記事が生成されて開かれて、書き終わったら<code>preview</code>で確認して、<code>deploy</code>実行すればサイトへの反映とレポジトリへのPushが行われる便利な環境が出来ました。
(Alfredのテーマもかっこよくして遊んでました。)</p>

<p><img src="http://mono0926.github.io/images/post/post.png" alt="post workflow" /></p>

<h4>Octopress気に入ったけど…</h4>

<p>Qiitaもよく見たらMarkdownでかなり使いやすそう。
色々ツールもあるし。</p>

<ul>
<li><a href="http://kobito.qiita.com/">Kobito</a>

<ul>
<li>Qiitaに投稿出来るクライアントアプリ。同時にGistにスニペット登録も可能。</li>
</ul>
</li>
<li><a href="http://www.gistboxapp.com/">GistBox</a>

<ul>
<li>Gist用Webアプリ。Chrome App版はネイティブっぽい操作感。</li>
</ul>
</li>
</ul>


<p>最近久しく何も書いてなかったけど、あまり脈絡の無い雑多メモなどはこちらで、技術系TipsはQiitaあたりにまとめる習慣付けたい（´・ω・｀）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GitHub + Octopressでブログ作ってみた]]></title>
    <link href="http://mono0926.github.io/blog/2013/07/07/github_octopress_blog/"/>
    <updated>2013-07-07T12:16:00+09:00</updated>
    <id>http://mono0926.github.io/blog/2013/07/07/github_octopress_blog</id>
    <content type="html"><![CDATA[<p>Markdownで書けてなかなか良い感じかもしれない（´-ω-｀）</p>

<h3>導入手順</h3>

<p>ここらへん参考に。</p>

<ul>
<li><a href="http://rcmdnk.github.io/blog/2013/03/07/setup-octopress/">GitHub pages + Octopressの導入</a>

<ul>
<li>最初は適当にMacに入っているRuby 1.7.3やHomebrewで入れた2系でインストールしようとしたらはまって結局Ruby 1.9.3にしたので、初めから素直に従った方がよさげです。</li>
</ul>
</li>
<li>rvmの導入がうまくできなかったので、それだけこれを参考に。

<ul>
<li><a href="http://jitsu102.hatenablog.com/entry/2012/11/23/162034">(OS X::Mountain Lion) RVMでRubyの環境構築メモ</a></li>
</ul>
</li>
</ul>


<h4>個人的な運用</h4>

<ul>
<li><a href="https://github.com/imathis/octopress">imathis/octopress</a>からForkしてそのままソース管理として利用

<ul>
<li>下書きなどあっても人に見られちゃうからBitbucket使うっていう人が多いらしいですが、あまり気にならないのでGitHubで一元管理</li>
</ul>
</li>
<li><code>setup_github_pages</code> と入力して、<a href="http://mono0926.github.io">GitHub上のこのページ</a> にデプロイされるように</li>
</ul>


<!-- more -->


<h4>テーマの変更</h4>

<p>テーマは、<a href="https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes">imathis/octopress</a>から選べますが、あまり有名じゃないので、そんなに選択肢無いです。凝るなら自分で作るべきですかね。
こぎれいなテーマを適当に選んで使っています。
導入は簡単で、上記から選んで、下のコマンドですぐ反映されます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>octopress
</span><span class='line'><span class="nv">$ </span>git clone GIT_URL .themes/THEME_NAME
</span><span class='line'><span class="nv">$ </span>rake install<span class="o">[</span><span class="s1">&#39;THEME_NAME&#39;</span><span class="o">]</span>
</span><span class='line'><span class="nv">$ </span>rake generate
</span></code></pre></td></tr></table></div></figure>


<h3>Markdown 初めて書いた</h3>

<p>なかなか便利ですね(　´･‿･｀)
このあたりよくまとまっててよかったです。</p>

<ul>
<li><a href="http://qiita.com/Qiita/items/c686397e4a0f4f11683d">Markdown記法 チートシート</a></li>
<li><a href="http://qa.atmarkit.co.jp/docs/markdown">QA@ITで使えるMarkdown記法</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
